@using StudyDS_web.Models.ViewModels
@{
    ViewData["Title"] = "Przedmioty";
}
@model SubjectIndexViewModel

<div class="d-flex justify-content-between align-items-center mb-4">
    <h3 class="mb-0">Przedmioty</h3>
    <div class="form-group w-auto">
        <label for="sortSelect" class="form-label fw-semibold mb-0 me-2">Sortuj według:</label>
        <select id="sortSelect" class="form-select">
            <option value="" selected hidden>Wybierz</option>
            <option value="priority">Priorytet</option>
            <option value="passed">Zaliczenie</option>
            <option value="grade">Ocena</option>
        </select>
    </div>
</div>

@if(Model != null)
{
    <div id="subjectsContainer" class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var subject in Model.Subjects)
        {
            <div class="col subject-card" 
                 data-priority="@((int)subject.PriorityLevel)"
                 data-passed="@(subject.IsPassed ? 1 : 0)"
                 data-grade="@subject.Grade.GetValueOrDefault(0)">
                <div class="card h-100 position-relative">

                    <form asp-action="DeleteSub" asp-route-subjectId="@subject.SubjectId" method="post"
                          class="position-absolute top-0 end-0 p-2">
                        <button type="submit" class="btn btn-sm btn-danger" title="Usuń">
                            <i class="bi bi-trash"></i>
                        </button>
                    </form>

                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title mt-4">@subject.Name</h5>
                        <p class="card-text"><strong>Ilość ECTS:</strong> @subject.Ects</p>
                        <p class="card-text"><strong>Priorytet:</strong> @Html.DisplayFor(model => subject.PriorityLevel)</p>
                        @if (subject.PassingType != null)
                        {
                            <p class="card-text mb-3"><strong>Zaliczenie:</strong> @Html.DisplayFor(model => subject.PassingType)</p>
                        }

                        <div class="mt-auto d-flex justify-content-between">
                            <a href="#" class="btn btn-primary edit-subject-btn" data-id="@subject.SubjectId">Edytuj</a>
                            <a href="#" class="btn btn-success edit-pass-subject-btn" data-id="@subject.SubjectId">Zaliczenie</a>
                        </div>
                    </div>
                    <div class="card-footer text-center">
                        @{
                            string message;
                            string colorClass;
                            if (!subject.IsPassed)
                            {
                                message = "Brak zaliczenia";
                                colorClass = "text-secondary";
                            }
                            else if (subject.Grade.HasValue)
                            {
                                message = $"Zaliczono z oceną: {subject.Grade.Value.ToString("0.0")}";
                                colorClass = "text-success";
                                if (subject.Grade < 2.5)
                                {
                                    message = $"Brak zaliczenia z oceną: {subject.Grade.Value.ToString("0.0")}";
                                    colorClass = "text-danger";
                                }
                            }
                            else
                            {
                                message = "Zaliczono bez oceny";
                                colorClass = "text-success";
                            }

                        }
                        <small class="@colorClass fw-semibold">@message</small>
                    </div>
                </div>
            </div>
        }
    </div>
    <br />
    <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#addSubjectModal">Nowy przedmiot</button>

    <div class="modal fade" id="addSubjectModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Dodaj przedmiot</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Zamknij"></button>
                </div>
                <div class="modal-body">
                    @await Html.PartialAsync("AddSubject", Model.formViewModel)
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="editSubjectModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edytuj wydarzenie</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" id="editSubjectModalContent">
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="editPassSubjectModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Dodaj zaliczenie</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" id="editPassSubjectModalContent">
                </div>
            </div>
        </div>
    </div>

    @section Scripts
    {
    <script src="~/js/Subject.js" asp-append-version="true"></script>
    }
}
